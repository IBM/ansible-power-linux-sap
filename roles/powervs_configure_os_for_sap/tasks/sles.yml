##########################################
# Tune SLES for SAP
##########################################
# 1. Install and Configure packages
# 2. Configure Network settings
# 3. Set transparent_hugepage never
# 4. Install and Configure saptune

- name: Install and Configure packages
  block:
    - name: Install required packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items:
        - multipath-tools
        - irqbalance
        - nfs-utils

    - name: Start and enable services
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      with_items:
        - multipathd
        - irqbalance.service
        - nfs
        - rpcbind

- name: Configure network settings
  block:
    - name: Create interfaces dictionary
      ansible.builtin.set_fact:
        interfaces: "{{ interfaces | default({}) | combine({item: hostvars[inventory_hostname]['ansible_' + item]}) }}"
      with_items: "{{ ansible_interfaces | replace('-', '_') }}"

    - name: Set Jumboframes MTU 9000
      ansible.builtin.lineinfile:
        dest: "/etc/sysconfig/network/ifcfg-{{ item.key }}"
        regexp: "^MTU"
        line: "MTU='9000'"
      with_dict: "{{ interfaces }}"
      when:
        - "item.value.ipv4.address is defined"
        - "item.key != 'lo'"
        - "item.value.mtu != 9000"
      register: mtu_changes

    - name: Set ETHTOOL_OPTIONS TSO ON
      ansible.builtin.lineinfile:
        dest: "/etc/sysconfig/network/ifcfg-{{ item.key }}"
        regexp: "^ETHTOOL_OPTIONS"
        line: "ETHTOOL_OPTIONS='-K {{ item.key }} tso on'"
      with_dict: "{{ interfaces }}"
      when:
        - "item.value.ipv4.address is defined"
        - "item.key != 'lo'"
      register: ethtool_changes

    - name: Restart network
      ansible.builtin.service:
        name: network
        state: restarted
      when:
        - mtu_changes.changed or ethtool_changes.changed

    - name: Enable Receive Flow Steering (RFS)
      ansible.builtin.include_tasks: "rfs.yml"

- name: Set transparent_hugepage to never
  ansible.builtin.shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled
  changed_when: false

- name: Install and Configure saptune
  block:
    - name: Install saptune package
      community.general.zypper:
        name: saptune
        state: present

    - name: Check if {{ sap_solution | upper }} solution is applied
      ansible.builtin.shell: "saptune solution enabled | grep -xi {{ sap_solution }}"
      register: saptune_status
      ignore_errors: true
      changed_when: false

    - name: Tune SLES for SAP {{ sap_solution | upper }}
      ansible.builtin.shell: |
        saptune revert all
        saptune solution apply {{ sap_solution | upper }}
        saptune service enablestart
      when: saptune_status.rc != 0

    - name: Activate SLES tuning for SAP {{ sap_solution | upper }}
      ansible.builtin.command: "saptune service takeover"

    - name: Check for saptune installation and enablement
      ansible.builtin.command: saptune_check
      register: saptune_check_log
      ignore_errors: true
      changed_when: false

    - name: Debug fail if saptune is not setup correctly
      ansible.builtin.debug:
        msg: "Saptune may not be setup correctly, please verify and perform corrective action"
      when: saptune_check_log.rc != 0
