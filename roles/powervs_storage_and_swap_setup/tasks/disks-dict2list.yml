---
# This task reads the variable passed to execute ansible roles, and manipulate them to be
# passed to fs_creation role, in a single dictionary for each name variable passed in variable list.
# This is an intermediate task, and is required for converting dictionary type disks_configuration to
# a list type for filesystem creation. It is not required if disks_configuration type is a list .

# Use this loop to distribute pvs for names provided and use them later for filesystem creation.
- name: For loop, to manipulate pv listing.
  ansible.builtin.raw: i=0; while [[ $i -lt {{ item.1 }} ]]; do echo {{ item.0 }} ; let i=i+1; done
  register: loop_for_wwn
  with_together:
    - "{{ disks_configuration.names | map('trim') | list }}"
    - "{{  disks_configuration.counts | map('trim') | list }}"
  changed_when: false

- ansible.builtin.set_fact:
    tmp_wwn_list: "{{ tmp_wwn_list | default([]) + item.stdout_lines }}" # noqa name[missing]
  loop: "{{ loop_for_wwn.results }}"

- ansible.builtin.debug:
    var: loop_for_wwn.results # noqa name[missing]

- name: Debug
  ansible.builtin.debug:
    var: tmp_wwn_list

- ansible.builtin.debug:
    var: "{{ tmp_wwn_list | type_debug }}" # noqa name[missing]

- name: Set fact create a dict with pv and its type
  ansible.builtin.set_fact:
    pv_listing_dm: "{{ pv_listing_dm | default({}) |  combine({ item.0: item.1  })}}"
  with_together:
    - "{{ disks_configuration.wwns | map('trim') | list }}"
    - "{{ tmp_wwn_list }}"

- ansible.builtin.debug:
    var: pv_listing_dm # noqa name[missing]

- name: Create a file /root/tmp_file with pv listing content.
  ansible.builtin.copy:
    content: "{{ pv_listing_dm }}" # noqa risky-file-permissions
    dest: "/root/tmp_file"
  changed_when: false

- ansible.builtin.raw: "cat /root/tmp_file | tr [{},] '\n' | tee /root/tmp_file_mod" # noqa name[missing]
  changed_when: false

- ansible.builtin.raw: "cat /root/tmp_file_mod | sed 's/ //g' | sed 's/\"//g' | grep {{ item }} | sed 's/:{{ item }}//g' | tr '\n' ',' | sed 's/,$//g'"
  register: tmp_wwn_var # noqa name[missing]
  loop: "{{ disks_configuration.names | map('trim') | list }}"
  changed_when: false

- ansible.builtin.set_fact:
    wwn_list: "{{ wwn_list | default([]) + item.stdout_lines }}" # noqa name[missing]
  loop: "{{ tmp_wwn_var.results }}"

- ansible.builtin.debug:
    var: wwn_list # noqa name[missing]

- name: Set fact create stripes list dictionary
  ansible.builtin.set_fact:
    disks_config_mod: "{{ disks_config_mod | default([]) + [{ 'name': item.0, 'count' : item.1, 'mount' : item.2, 'wwns' : item.3 }] }}"
  with_together:
    - "{{ disks_configuration.names | map('trim') | list }}"
    - "{{ disks_configuration.counts | map('trim') | list }}"
    - "{{ disks_configuration.mounts | map('trim') | list }}"
    - "{{ wwn_list }}"

- ansible.builtin.debug:
    var: disks_config_mod # noqa name[missing]

- name: Execution of fs_creation role starts here. Iterate for each list created above
  ansible.builtin.include_tasks: file-system-creation-core.yml
  with_items:
    - "{{ disks_config_mod }}"
  loop_control:
    loop_var: file_system

# Remove temp file created.
- name: Remove temp file created during execution
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  with_items:
    - /root/tmp_file
    - /root/tmp_file_mod
  changed_when: false
