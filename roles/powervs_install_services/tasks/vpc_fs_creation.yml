---
# setting variable values, to be used later for filesystem creation and disk discovery
- name: Set up variables for filesystem
  ansible.builtin.set_fact:
    file_system_name: "{{ item.name }}"
    file_system_path: "{{ item.mount_path }}"
    file_system_size: "{{ item.size }}"

# install lvm package is not already installed
- name: Install lvm packages if not already installed
  ansible.builtin.package:
    name:
      - lvm2
      - sg3_utils
    state: present

- name: Rescanning for new disks
  ansible.builtin.command: /usr/bin/rescan-scsi-bus.sh
  changed_when: false

- name: Get the device name as per the disk size.
  ansible.builtin.shell: " fdisk -l 2>/dev/null | egrep '^Disk' | egrep -v 'dm-|type|identifier|mapper' | grep -i {{ file_system_size }} | awk '{ print $2 }' | sed 's/://g' "
  register: wwn_dm_list
  changed_when: false

# set disk_name based on above command execution result
- name: Set up the disk name
  ansible.builtin.set_fact:
    disk_name: "{{ wwn_dm_list.stdout }}"

# Creating volume group.
- name: Create LVM volume group {{ file_system_name }}vg on {{ disk_name }}
  # noqa fqcn[action]
  lvg:
    vg: "{{ file_system_name }}vg"
    pvs: "{{ disk_name }}"
    state: present

# Making use of --stripesize as 64K as default, unless passed explicitly in extra vars
- name: Create Logical Volume {{ file_system_name }}lv
  # noqa fqcn[action]
  lvol:
    vg: "{{ file_system_name }}vg"
    lv: "{{ file_system_name }}lv"
    size: 100%VG
    state: present

- name: Create directory if doesn't exist {{ file_system_path }}
  ansible.builtin.file:
    path: "{{ file_system_path }}"
    state: directory
    mode: "0755"

- name: Create filesystem
  # noqa fqcn[action]
  filesystem:
    fstype: xfs
    dev: "/dev/mapper/{{ file_system_name }}vg-{{ file_system_name }}lv"
    opts: -K

- name: Mount lv {{ file_system_name }}lv on {{ file_system_path }}
  ansible.posix.mount:
    path: "{{ file_system_path }}"
    src: "/dev/mapper/{{ file_system_name }}vg-{{ file_system_name }}lv"
    fstype: xfs
    opts: defaults,nofail
    state: mounted
